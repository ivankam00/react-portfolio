{"version":3,"sources":["components/header.js","components/sidebar.js","components/introduction.js","components/about.js","components/projects.js","components/graphics.js","components/contact.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","src","alt","Component","Sidebar","Introduction","Footer","App","id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2TAEqBA,E,YACjB,WAAYC,GAAQ,qEAAOA,I,sEAKvB,OACI,4BAAQC,UAAU,cACd,gEACA,yBAAKC,IALG,yBAKUD,UAAU,gBAAgBE,IAAI,gB,GAT5BC,aCAfC,E,YACjB,WAAYL,GAAQ,qEAAOA,I,sEAGvB,OACI,kC,GALyBI,aCAhBE,E,YACjB,WAAYN,GAAQ,qEAAOA,I,sEAGvB,OACI,iCACI,gDACA,wE,GAP0BI,aCArBC,E,YACjB,WAAYL,GAAQ,qEAAOA,I,sEAKvB,OACI,iCACI,4CACA,6BAAK,yBAAKE,IALE,yBAKeD,UAAU,cAAcE,IAAI,qBACvD,6BACI,kRAGA,kaAIA,6HACA,kgB,GAnBiBC,aCAhBC,E,YACjB,WAAYL,GAAQ,qEAAOA,I,sEAGvB,OACI,kC,GALyBI,aCAhBC,E,YACjB,WAAYL,GAAQ,qEAAOA,I,sEAGvB,OACI,kC,GALyBI,aCAhBC,E,YACjB,WAAYL,GAAQ,qEAAOA,I,sEAGvB,OACI,kC,GALyBI,aCAhBG,E,iLAEb,OACI,qC,GAHwBH,aCiCrBI,MAvBf,WACI,OACI,yBAAKP,UAAU,OACX,kBAAC,EAAD,MACA,yBAAKQ,GAAG,UAAUR,UAAU,gBACxB,0BAAMQ,GAAG,OAAOR,UAAU,aACtB,2BAAOQ,GAAG,WACN,kBAAC,EAAD,OAEJ,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SAIZ,kBAAC,EAAD,QClBQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.cf96aa8b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        const banner = (\"./images/img_15021.jpg\") // Image below h1 tag\r\n\r\n        return (\r\n            <header className=\"App-header\">\r\n                <h1>Ivan's Web Development Portfolio</h1>\r\n                <img src={banner} className=\"header-banner\" alt=\"Banner\" />\r\n            </header>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Sidebar extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Introduction extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h2>HI, I'M IVAN KAM</h2>\r\n                <h3>WEBSITE &amp; WEB APPLICATION DEVELOPER</h3>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Sidebar extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        const aboutImage = (\"./images/img_13931.jpg\")\r\n\r\n        return (\r\n            <section>\r\n                <h3>ABOUT MYSELF</h3>\r\n                <div><img src={aboutImage} className=\"about-image\" alt=\"Picture of Ivan\" /></div>\r\n                <div>\r\n                    <p>Currently being unemployed and looking for a job, I am developing my back-end coding skills, while at the same time,\r\n                        improving on my knowledge of ReactJS and Unity. In my free time, I enjoy hiking, playing JRPG video games, and\r\n                        watching anime.</p>\r\n                    <p>My passion for programing stems from my curiosity to break things apart to understand how they work. That curiosity is\r\n                        now my driving force to further improve my skills by challenging myself with new technologies. Currently, I am\r\n                        developing my back-end coding skills to balance my knowledge in front-end development. At the same time, I am\r\n                        improving on my knowledge of ReactJS and Unity.</p>\r\n                    <p>In my free time, I enjoy hiking, playing JRPG video games, and watching anime or Asian dramas.</p> \r\n                    <p>My background is in Computer Information Systems with a minor in Business. Although the degree is not code heavy\r\n                        as computer science, through the business courses, I learned the skills needs to work in groups and teams of people\r\n                        with varying backgrounds, to prepare me for an office environment. Most of the courses I took to obtain my Business\r\n                        minor are either accounting or finance courses. Currently, I have no ambitions in pursuing a degree in either\r\n                        accounting or finance.</p>                        \r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Sidebar extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Sidebar extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Sidebar extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer></footer>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport './styles/reset.css';\nimport Header from './components/header';\nimport Sidebar from './components/sidebar';\nimport Introduction from './components/introduction';\nimport About from './components/about';\nimport Projects from './components/projects';\nimport Graphics from './components/graphics';\nimport Contact from './components/contact';\nimport Footer from './components/footer';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header></Header>\n            <div id=\"content\" className=\"site-content\">\n                <main id=\"main\" className=\"site-main\">\n                    <aside id=\"sidebar\">\n                        <Sidebar></Sidebar>\n                    </aside>\n                    <div>\n                        <Introduction></Introduction>\n                        <About></About>\n                        <Projects></Projects>\n                        <Graphics></Graphics>\n                        <Contact></Contact>\n                    </div>\n                </main>\n            </div>\n            <Footer></Footer>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}